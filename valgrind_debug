==51019== Memcheck, a memory error detector
==51019== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==51019== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==51019== Command: ./minishell
==51019== Parent PID: 46725
==51019== 
==51019== Invalid read of size 1
==51019==    at 0x10D992: redir (parse_tokens.c:22)
==51019==    by 0x10DBAE: parse_tokens (parse_tokens.c:75)
==51019==    by 0x109756: main (main.c:54)
==51019==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==51019== 
==51019== 
==51019== Process terminating with default action of signal 11 (SIGSEGV)
==51019==  Access not within mapped region at address 0x0
==51019==    at 0x10D992: redir (parse_tokens.c:22)
==51019==    by 0x10DBAE: parse_tokens (parse_tokens.c:75)
==51019==    by 0x109756: main (main.c:54)
==51019==  If you believe this happened as a result of a stack
==51019==  overflow in your program's main thread (unlikely but
==51019==  possible), you can try to increase the size of the
==51019==  main thread stack using the --main-stacksize= flag.
==51019==  The main thread stack size used in this run was 8388608.
==51019== 
==51019== HEAP SUMMARY:
==51019==     in use at exit: 223,700 bytes in 492 blocks
==51019==   total heap usage: 1,552 allocs, 1,060 frees, 450,887 bytes allocated
==51019== 
==51019== LEAK SUMMARY:
==51019==    definitely lost: 0 bytes in 0 blocks
==51019==    indirectly lost: 0 bytes in 0 blocks
==51019==      possibly lost: 0 bytes in 0 blocks
==51019==    still reachable: 223,700 bytes in 492 blocks
==51019==         suppressed: 0 bytes in 0 blocks
==51019== Rerun with --leak-check=full to see details of leaked memory
==51019== 
==51019== For lists of detected and suppressed errors, rerun with: -s
==51019== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
